worker_processes auto;

pid       /nginx/nginx.pid;
error_log /var/log/nginx/error.log warn;

events {
    worker_connections 256;
}

http {
    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;
    server_tokens off;

    # === MIME Types ===
    include             mime.types;
    default_type        application/octet-stream;

    # === Logging Settings (Optional - can be overridden in server blocks) ===
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;
    access_log /dev/stdout;
    error_log /var/log/nginx/error.log;
    access_log /dev/stderr;

    # === SSL Settings (Optional - common settings, can be overridden) ===
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # === Gzip Settings (Optional) ===
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # === Include User Configurations ===
    include /nginx/conf.d/*.conf;

    # === Optional: Default Server ===
    # Prevents Nginx from failing if no server blocks are defined at all.
    server {
         listen 80 default_server;
         listen [::]:80 default_server;
         server_name _;

         # Return a simple response or serve a default page
         location / {
             root /var/www;
             index index.html;
         }
     }

     # need default certs to enable:
     # server {
     #    listen 443 ssl default_server;
     #    listen [::]:443 ssl default_server;
     #    server_name _;
     #    ssl_certificate /path/to/default/cert.pem;
     #    ssl_certificate_key /path/to/default/key.pem;
     #    location / { return 444; }
     # }
}
